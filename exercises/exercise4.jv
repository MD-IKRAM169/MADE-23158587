pipeline BatteryTempPipeline {

    block BatteryTempExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block BatteryZipHandler oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block BatteryTempFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block BatteryTempTextFileHandler oftype TextFileInterpreter {}

    block BatteryTempCSVHandler oftype CSVInterpreter {
        delimiter: ";";
    }

    block BatteryCellRenamer oftype CellWriter {
        at: range A1:E1;
        write: ["id", "producer", "model", "month", "temperature"];
    }

    block BatteryHeaderRename oftype CellWriter {
        at: cell J1;
        write: ["battery_temperature"];
    }

    block BatteryTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype BatteryIDType,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype text,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }

    constraint BatteryIDConstraint on integer:
        value > 0;
        
    valuetype BatteryIDType oftype integer {
        constraints: [BatteryIDConstraint];
    }

    

    transform BatteryConvertCtoF {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block BatteryTempTransformer oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        use: BatteryConvertCtoF;
    }

    block BatteryTempToFahrenheit oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        use: BatteryConvertCtoF;
    }

    block BatteryTempLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }

    BatteryTempExtractor
        -> BatteryZipHandler
        -> BatteryTempFilePicker
        -> BatteryTempTextFileHandler
        -> BatteryTempCSVHandler
        -> BatteryCellRenamer
        -> BatteryHeaderRename
        -> BatteryTableInterpreter
        -> BatteryTempTransformer
        -> BatteryTempToFahrenheit
        -> BatteryTempLoader;
}

